Polymerization
==============

Polymerization model
--------------------

   Constructor::
   
      Polymerization(AllInfo all_info, NeighborList nlist, Real r_cut, unsigned int seed)
      # initializes an object of polymerization with system information, neighbor list, 
      # cut-off, and RNG seed.
	  
      Polymerization(AllInfo all_info, string type, Real percent, NeighborList nlist, 
      Real r_cut, unsigned int seed)
      # specifies the method of polymerization with a percent of initiator with system information, 
      # particle type, percent, neighbor list, cut-off, and RNG seed.
	  
   Functions::
   
      void setPr(Real prob)
      # specifies reaction probability.
	  
      void setPr(string type1, string type2, Real prob)
      # specifies reaction probability between particle type1 and type2.
	  
      void setPrFactor (Real prob_factor)
      # specifies the reaction probability factor of (factor)n where n is reaction times.
	  
      void setPrFactor(cstring type1, string type2, Real prob_factor)
      # specifies the reaction probability factor between particle type1and type2.
	  
      void setExchangePr(string type1, string type2, string  type3, Real probability)
      # specifies the reaction probability of replacing type3 to connect to type 2 by type1.
	  
      void setMaxCris(string type, unsigned int cris_max)
      # specifies the upper limit number of bonds generated by reaction.
	  
      void setNewBondType(string bondtype)
      # specifies the type of newly generated bonds by reaction.

      void setFuncReactRule(bool switch, Real K, Real r_0, Real b_0, Real epsilon0, Func function)
      # switches the rule of the reaction according to energy and specifies the rule with 
      # spring constant K, the maximum length for FENE r_0, the equilibrium length of bond b_0, 
      # the energy to shift epsilon0, and bond potential type (the candidates are harmonic and FENE).
	  
      void setMinDisReactRule(bool switch)
      # switches the rule of the reaction only with the nearest particle.
	  
      void initExPoint ()
      # switches on initializing reactive point for exchange reaction.
	  
   Example::
   
      reaction = galamost.Polymerization(all_info, neighbor_list, 1.12246 ,16361)
      reaction.setFuncReactRule(True, 1250.000, 1.0,0.470, 10.0, galamost.Polymerization.Func.harmonic)
      reaction.setPr(0.002)
      reaction.setMaxCris('B',3)
      # sets the connected bond upper limited number.
      reaction.setPeriod(50)
      app.add(reaction)
   
Depolymerization model
----------------------

   Constructor::
   
      DePolymerization(AllInfo all_info, Real T, unsigned int seed)
      initializes an object of depolymerization with system information, temperature, and RNG seed.
	  
   Functions::
   
      void setParams(string type, Real K, Real r_0, Real b_0, Real epsilon0, Real Pr, Func function)
      # specifies the depolymerization probability with bond type, spring constant K, 
      # the maximum length for FENE r_0, the equilibrium length of bond b_0, 
      # the energy to shift epsilon0, and bond potential type (the candidates are harmonic,
      # FENE, and NoFunc. For “NoFunc”, only probability works for the judgement of bond rupture).
	  
      void setT(Real T)
      # specifies the temperature with a fixed value.
	  
      void setT(Variant vT)
      # specifies the temperature with a varying value by time step.
	  
   Example::
   
      reaction = galamost.DePolymerization(all_info, 1.0, 16361)  
      reaction.setParams('sticky', 10.0, 1.5, 0.96, 10.0, 0.2, galamost.DePolymerization.Func.harmonic)
      # sets bondname, K, r_0, b_0, epsilon0, Pr, and function.
      reaction.setPeriod(1) 
      # sets how many steps to react.
      app.add(reaction)
